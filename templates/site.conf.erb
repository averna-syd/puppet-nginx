# This file is managed by Puppet.
# DO NOT edit this file directly.

<% if ssl %>
server {
  listen 80;
  server_name <%= name %>;
  rewrite ^ https://$server_name$request_uri? permanent;
}
<% end %>

<% unless upstreams.empty? %>
upstream <%= name %>.backend {
  <% upstreams.each do |upstream| %>
  server <%= upstream %> fail_timeout=0;
  <% end %>
}
<% end %>

server {
  listen <% if ssl %>443<% else %>80<% end %><% if default_vhost %> default deferred<% end %>;
  client_max_body_size <%= client_max_body_size %>;
  <% if ssl %>
  server_name <%= name %>;
  <% else %>
  server_name <%= name %> <% unless aliases.empty? %><% aliases.each do |a| %> <%= a %><% end %><% end %>;
  <% end %>

  <% if ssl %>
  ssl on;
  ssl_certificate <%= ssl_cert %>;
  ssl_certificate_key <%= ssl_key %>;

  ssl_session_timeout  5m;
  ssl_protocols  SSLv2 SSLv3 TLSv1;
  ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
  ssl_prefer_server_ciphers   on;
  <% end %>

  root <%= root %>;

  access_log  /var/log/nginx/<%= name %>.access.log;
  error_log  /var/log/nginx/<%= name %>.error.log;

  keepalive_timeout 5;

  <% unless static.empty? %>
  <% static.each do |root| %>
  location <%= root['location'] %> {
    alias <%= root['alias'] %>;
    expires max;
    access_log off;
  }
  <% end %>
  <% end %>

  location / {

    <% unless confs.empty? %>
    <% confs.each do |c| %> <%= c %><% end %>
    <% end %>

    <% unless rewrites.empty? %>
    rewrite <% rewrites.each do |r| %> <%= r %><% end %>;
    <% end %>

    <% unless upstreams.empty? %>
    try_files $uri @<%= name %>;
    <% else %>
    index  index.html index.htm;
      <% if autoindex %>
    autoindex on;
      <% end %>
    <% end %>

    <% if rewrite_missing %>
    try_files $uri $uri/ $uri.html =404;
    <% end %>
  }

  <% unless upstreams.empty? %>
  location @<%= name %> {

    proxy_set_header        Host            $http_host;
    proxy_set_header        X-Real-IP       $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_no_cache          $cookie_nocache  $arg_nocache$arg_comment;
    proxy_no_cache          $http_pragma     $http_authorization;
    proxy_cache_bypass      $cookie_nocache  $arg_nocache$arg_comment;
    proxy_cache_bypass      $http_pragma     $http_authorization;
    proxy_next_upstream     error timeout invalid_header http_500 http_502 http_503 http_504;
    proxy_redirect off;
    proxy_buffering off;

    proxy_pass http://<%= name %>.backend;
  }
  <% end %>
}
